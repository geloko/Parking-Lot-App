from django.db import models

class BaseInfo(models.Model):
  created_at = models.DateTimeField(auto_now=False, auto_now_add=True, blank=True, null=True)
  updated_at = models.DateTimeField(auto_now=True, auto_now_add=False, blank=True, null=True)

  class Meta:
    ordering = ['-updated_at', '-created_at']
    abstract = True

class MallParking(BaseInfo):
  num_entries = models.IntegerField(default=3)
  flat_rate = models.DecimalField(default=40)
  exceed_rate = models.DecimalField(default=5000)
  flatRate_duration = models.IntegerField(default=3*60*60) # default is 3 hours (3 * 60 * 60)
  exceed_duration = models.IntegerField(default=24*60*60) # default is 24 hours (24 * 60 * 60)
  return_duration = models.IntegerField(default=30*60) # default is 30 minutes (30 * 60)

class Vehicle(BaseInfo):
  class VehicleType(models.TextChoices):
    S = 'S'
    M = 'M'
    L = 'L'
  plate_number = models.IntegerField(primary_key=True)
  type = models.CharField(max_length=4, choices=VehicleType.choices)

  def __str__(self):
    return self.plate_number

class ParkingSlotSize(BaseInfo):
  # id field is autogenerated, starts from 0
  name = models.CharField() # default values SP, MP, and LP, added sequentially on init to match the ids 0, 1 and 2
  continuous_rate = models.DecimalField() # parking rate for this parking size
  # default values for the rate are:
  # 20 per hour for SP
  # 60 per hour for MP
  # 100 per hour for LP

class ParkingSlot(BaseInfo):
  mall_parking = models.ForeignKey(MallParking, on_delete=models.CASCADE)
  parking_slot_size = models.ForeignKey(ParkingSlotSize, on_delete=models.CASCADE)
  distances = models.CharField() # array of integers in JSON format

class VehicleParking(BaseInfo):
  entry_datetime = models.DateTimeField(auto_now=False, auto_now_add=True)
  exit_datetime = models.DateTimeField(blank=True, null=True)
  is_flat_rate = models.BooleanField(default=True)
  parking_slot = models.ForeignKey(ParkingSlot, on_delete=models.CASCADE)
  vehicle = models.ForeignKey(Vehicle, on_delete=models.CASCADE)